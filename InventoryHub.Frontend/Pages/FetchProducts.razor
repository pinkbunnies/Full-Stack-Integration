@page "/fetchproducts"
@using System.Text.Json
@using System.Linq
@inject HttpClient Http

<h3>Product List</h3>

@if (products != null)
{
    @* Agrupar los productos por el nombre de la categoría y mostrar cada grupo *@
    foreach (var group in products.GroupBy(p => p.Category?.Name))
    {
        <h4>@(string.IsNullOrEmpty(group.Key) ? "Uncategorized" : group.Key)</h4>
        <ul>
            @foreach (var product in group)
            {
                <li>@product.Name - $@product.Price</li>
            }
        </ul>
    }
}
else
{
    <p>Loading...</p>
}

@code {
    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Petición al endpoint /api/productlist
            var response = await Http.GetAsync("/api/productlist");
            response.EnsureSuccessStatusCode();
            var json = await response.Content.ReadAsStringAsync();
            products = JsonSerializer.Deserialize<Product[]>(
                json,
                new JsonSerializerOptions { PropertyNameCaseInsensitive = true }
            );
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public double Price { get; set; }
        public int Stock { get; set; }
        public Category? Category { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }
}
